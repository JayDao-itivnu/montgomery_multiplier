

# This file was *autogenerated* from the file ../sage/mont_mul.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_8 = Integer(8); _sage_const_100 = Integer(100); _sage_const_2 = Integer(2); _sage_const_15 = Integer(15)
import os
import basic_operations
# Get environment variables
tb_dir = os.getenv('TB_DIR')
filename = os.path.join(tb_dir, 'MontMul.txt')
r = [_sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_0  ,_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 ]
len_of_bit = _sage_const_8 
no_of_test = _sage_const_100 
 
file = open(filename,"w")
for i in range(no_of_test) :
    a = randint(_sage_const_0 ,_sage_const_2 **len_of_bit - _sage_const_1 ); 
    if (a == _sage_const_0 ):
        a_ls = [_sage_const_0 ]
    else:
        a_ls = Integer(a).digits(_sage_const_2 )[::-_sage_const_1 ]
    b = randint(_sage_const_0 ,_sage_const_15 ) 
    if (b == _sage_const_0 ):
        b_ls = [_sage_const_0 ]
    else:
        b_ls = Integer(b).digits(_sage_const_2 )[::-_sage_const_1 ]
    if (len(a_ls) < len_of_bit):
        while (len_of_bit - len(a_ls) != _sage_const_0 ): a_ls.insert(_sage_const_0 ,_sage_const_0 )
    if (len(b_ls) < len_of_bit):
        while (len_of_bit - len(b_ls) != _sage_const_0 ): b_ls.insert(_sage_const_0 ,_sage_const_0 )
    file.write("N="); file.write(str(i+_sage_const_1 ))
    file.write("\nA=")
    file.write("{0:0>2}".format(hex(a).upper()[_sage_const_2 :]))
    
    file.write("\nB=")
    file.write("{0:0>2}".format(hex(b).upper()[_sage_const_2 :]))

    result_ls = basic_operations.mul_poly(a_ls,b_ls,r)
    
    file.write("\nC=")
    file.write("{0:0>2}".format(result_ls))
    file.write("\n")
file.close()

